Search.setIndex({"docnames": ["agentscope", "agentscope.agents", "agentscope.configs", "agentscope.memory", "agentscope.models", "agentscope.pipelines", "agentscope.rpc", "agentscope.service", "agentscope.service.code", "agentscope.service.file", "agentscope.service.retrieval", "agentscope.service.sql_query", "agentscope.service.text_processing", "agentscope.service.web_search", "agentscope.utils", "agentscope.web_ui", "index", "tutorial/main"], "filenames": ["agentscope.rst", "agentscope.agents.rst", "agentscope.configs.rst", "agentscope.memory.rst", "agentscope.models.rst", "agentscope.pipelines.rst", "agentscope.rpc.rst", "agentscope.service.rst", "agentscope.service.code.rst", "agentscope.service.file.rst", "agentscope.service.retrieval.rst", "agentscope.service.sql_query.rst", "agentscope.service.text_processing.rst", "agentscope.service.web_search.rst", "agentscope.utils.rst", "agentscope.web_ui.rst", "index.rst", "tutorial/main.md"], "titles": ["Module contents", "Agents package", "Configs package", "Memory package", "Models package", "Pipelines package", "RPC package", "Service package", "Code package", "File package", "Retrieval package", "SQL query package", "Text processing package", "Web search package", "Utils package", "Web UI package", "AgentScope Documentation", "AgentScope Tutorial"], "terms": {"base": [1, 2, 3, 4, 10, 13, 14], "class": [1, 2, 3, 4, 14], "agentscop": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14], "agentbas": 1, "name": [1, 2, 4, 8, 11, 14], "str": [1, 2, 3, 4, 8, 9, 11, 13, 14], "config": [1, 3, 4, 16], "dict": [1, 2, 3, 4, 9, 10, 11, 13, 14], "none": [1, 2, 3, 4, 8, 10, 11, 13, 14], "sys_prompt": 1, "model": [1, 2, 3, 10, 14, 16], "callabl": [1, 3, 10], "ani": [1, 2, 9, 10, 11, 14], "use_memori": 1, "bool": [1, 3, 4, 8, 9, 10, 11, 14], "true": [1, 3, 10], "memory_config": 1, "sourc": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14], "_oper": 1, "all": [1, 3, 9, 14], "should": [1, 4], "inherit": 1, "from": [1, 2, 3, 4, 8, 9, 10, 11, 14], "thi": [1, 2, 8, 10, 13, 14], "implement": [1, 8, 14], "repli": 1, "function": [1, 3, 8, 10, 11, 13, 14, 16], "clear_audi": 1, "remov": [1, 8, 14], "audienc": 1, "export_config": 1, "return": [1, 3, 4, 8, 9, 10, 11, 13, 14], "configur": [1, 3, 4], "The": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14], "current": [1, 8, 9, 13, 14], "load_from_config": 1, "load": [1, 3, 4], "paramet": [1, 3, 4, 8, 9, 10, 11, 13, 14], "load_memori": 1, "memori": [1, 8, 10, 16], "sequenc": [1, 3, 10], "input": [1, 2, 3, 4], "observ": 1, "x": 1, "store": [1, 3], "without": [1, 14], "respons": [1, 14], "union": [1, 3, 4, 8], "messag": [1, 2, 9, 10, 11, 14, 16], "record": 1, "defin": [1, 10], "action": 1, "taken": 1, "default": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14], "dialog": 1, "histori": 1, "some": [1, 8], "environ": [1, 8], "inform": [1, 13], "": [1, 4, 8, 13], "given": [1, 2, 14], "ar": [1, 3, 4, 8, 13, 14], "an": [1, 4, 8, 9, 13, 14], "adversari": 1, "doesn": [1, 3], "t": [1, 3], "includ": [1, 9, 13, 14], "thought": 1, "other": [1, 8, 11], "reset_audi": 1, "set": [1, 3, 8, 13, 14], "which": [1, 2, 3, 10, 14], "mean": [1, 3], "gener": [1, 2, 8, 14], "pass": [1, 3, 13], "notifi": 1, "when": [1, 8, 13, 14], "rm_audienc": 1, "cfgbase": 2, "init": 2, "kwarg": [2, 11, 13, 14], "initi": [2, 14], "argument": [2, 13], "check": [2, 8, 14], "type": [2, 3, 4, 8, 9, 10, 11, 13, 14], "openaicfg": 2, "openai": [2, 4, 8, 14], "api_kei": [2, 4, 13], "api": [2, 4, 13, 14], "kei": [2, 13], "us": [2, 3, 8, 10, 11, 13, 14], "Will": 2, "read": [2, 4, 9], "env": 2, "provid": [2, 3, 8, 10, 14], "client_arg": [2, 4], "client": 2, "e": [2, 4, 8, 11], "g": [2, 4, 8, 11], "timeout": [2, 4, 8], "max_retri": [2, 4], "generate_arg": [2, 4], "temperatur": [2, 4], "seed": 2, "model_nam": [2, 4, 14], "gpt": [2, 4], "4": 2, "3": [2, 4], "5": [2, 4], "turbo": [2, 4], "organ": [2, 3, 4], "postapicfg": 2, "post": [2, 4], "final": 2, "request": [2, 13, 14], "cfg": 2, "url": [2, 14], "api_url": [2, 4], "header": [2, 4, 14], "json": [2, 3, 7, 13, 14], "message_kei": 2, "json_arg": [2, 4], "post_arg": [2, 4], "addit": [2, 8, 13, 14], "within": [2, 8, 13], "keyword": [2, 13], "depend": [2, 3], "specif": [2, 3, 8, 13, 14], "requir": [2, 13], "max_length": [2, 4], "int": [2, 3, 4, 8, 10, 11, 13, 14], "2048": [2, 4], "max": [2, 14], "length": [2, 14], "wrapper": [2, 4], "retri": 2, "messages_kei": [2, 4], "prompt": [2, 14, 16], "For": [2, 4], "huggingfac": [2, 4], "modelscop": 2, "infer": [2, 4], "i": [2, 3, 4, 8, 9, 10, 11, 13, 14], "arg": [2, 14], "30": [2, 4], "post_api": [2, 4], "todo": 3, "abstract": [3, 13, 14], "piec": 3, "data": [3, 9, 10, 11, 14], "structur": 3, "multipl": [3, 14], "memorybas": 3, "abc": [3, 14], "add": [3, 14], "list": [3, 4, 10, 13, 14], "ad": 3, "new": [3, 9, 14], "fragment": 3, "how": 3, "clear": [3, 4, 14], "clean": 3, "delet": [3, 9], "index": [3, 16], "iter": 3, "match": [3, 11], "export": 3, "to_mem": 3, "fals": [3, 4, 8, 9, 11, 14], "file_path": [3, 9, 14], "get_memori": 3, "recent_n": 3, "filter_func": 3, "certain": [3, 14], "rang": 3, "filter": [3, 14], "overwrit": [3, 9], "design": 3, "both": [3, 8], "file": [3, 4, 7, 8, 14, 16], "size": 3, "number": [3, 10, 11, 13, 14], "segment": 3, "update_config": 3, "specifi": [3, 4, 8, 9, 13, 14], "convers": 3, "temporarymemori": 3, "embedding_model": [3, 10], "In": 3, "write": [3, 9, 14], "hard": 3, "disk": 3, "emb": [3, 10], "get_embed": 3, "get": [3, 14], "embed": [3, 4, 10], "unit": [3, 14], "If": [3, 8, 10, 13, 14], "have": 3, "attribut": [3, 14], "otherwis": 3, "its": [3, 4, 9, 11, 14], "vector": 3, "retriev": [3, 7, 16], "option": [3, 8, 10, 13, 14], "last": 3, "take": [3, 10], "boolean": [3, 9, 14], "valu": [3, 13, 14], "retrieve_by_embed": 3, "queri": [3, 7, 10, 13, 14, 16], "metric": [3, 14], "float": [3, 8, 10, 14], "top_k": [3, 10], "1": [3, 14], "preserve_ord": [3, 10], "string": [3, 8, 13, 14], "A": [3, 8, 9, 10, 11, 13, 14], "comput": [3, 10], "relev": 3, "between": [3, 10], "higher": 3, "better": 3, "you": [3, 4, 8], "can": [3, 4, 8, 13], "revers": 3, "order": [3, 10], "whether": [3, 4, 8, 9, 10, 11, 14], "preserv": [3, 10], "origin": [3, 10], "object": [3, 4, 11, 14], "contain": [4, 8, 9, 11, 13, 14], "one": [4, 10, 14], "each": [4, 13], "follow": [4, 14], "format": [4, 8, 13, 14], "after": 4, "differ": [4, 10, 11], "your": 4, "model_name_for_openai": 4, "your_api_kei": 4, "your_organ": 4, "need": 4, "toke": 4, "exampl": 4, "author": 4, "bearer": 4, "api_token": 4, "max_length_of_model": 4, "0": [4, 14], "modelwrapperbas": [4, 10], "openaichatwrapp": 4, "openaiwrapp": 4, "chat": [4, 14], "openaidallewrapp": 4, "dall": 4, "openaiembeddingwrapp": 4, "postapimodelwrapp": 4, "deploi": 4, "import": [4, 8, 14], "clear_model_config": 4, "load_model_by_nam": 4, "read_model_config": 4, "empty_first": 4, "path": [4, 9, 14], "befor": 4, "code": [7, 14, 16], "exec_python": 7, "modul": [7, 16], "execute_python_cod": [7, 8], "sys_python_guard": [7, 8], "common": [7, 16], "create_directori": [7, 9], "create_fil": [7, 9], "delete_directori": [7, 9], "delete_fil": [7, 9], "move_directori": [7, 9], "move_fil": [7, 9], "read_json_fil": [7, 9], "write_json_fil": [7, 9], "text": [7, 16], "read_text_fil": [7, 9], "write_text_fil": [7, 9], "retrieval_from_list": 7, "retrieve_from_list": [7, 10], "similar": 7, "cos_sim": [7, 10], "sql": [7, 14, 16], "mongodb": 7, "query_mongodb": [7, 11], "mysql": 7, "query_mysql": [7, 11], "sqlite": 7, "query_sqlit": [7, 11], "process": [7, 8, 16], "summar": [7, 14], "web": [7, 16], "search": [7, 11, 16], "web_search": [7, 13], "execut": [8, 11, 14], "python": 8, "servic": [8, 9, 10, 11, 13, 14, 16], "300": 8, "use_dock": 8, "maximum_memory_byt": 8, "servicerespons": [8, 9, 10, 11, 13, 14], "insid": 8, "docker": 8, "run": 8, "It": [8, 13, 14], "ha": [8, 10], "layer": 8, "secur": 8, "especi": 8, "untrust": 8, "warn": [8, 14], "directli": [8, 14], "host": [8, 11], "system": 8, "pose": 8, "potenti": 8, "risk": 8, "onli": [8, 11, 13, 14], "disabl": 8, "confid": 8, "safeti": 8, "being": 8, "empti": [8, 14], "maximum": [8, 10, 11, 13], "time": [8, 14], "second": [8, 14], "allow": [8, 11], "exce": [8, 14], "limit": [8, 14], "termin": 8, "determin": [8, 14], "nativ": 8, "avail": 8, "present": 8, "imag": 8, "byte": 8, "impos": 8, "two": [8, 10], "element": [8, 10], "output": 8, "error": [8, 9, 11, 13, 14], "captur": 8, "standard": 8, "respect": 8, "ipython": 8, "oper": [8, 9, 11, 14], "plt": 8, "show": 8, "displai": 8, "matplotlib": 8, "plot": 8, "support": [8, 11, 13], "stem": 8, "non": 8, "interact": 8, "natur": 8, "variou": 8, "destruct": 8, "prevent": 8, "interf": 8, "test": 8, "fork": 8, "bomb": 8, "kill": 8, "filesystem": 8, "etc": 8, "modifi": 8, "http": [8, 14], "github": [8, 14], "com": [8, 14, 16, 17], "human": [8, 14], "eval": [8, 14], "blob": [8, 14], "master": [8, 14], "human_ev": [8, 14], "py": [8, 14], "directori": [9, 14], "directory_path": 9, "creat": [9, 14], "where": [9, 14], "indic": [9, 14], "success": [9, 13, 14], "content": [9, 13, 14, 16], "source_path": 9, "destination_path": 9, "move": 9, "destin": 9, "pars": [9, 14], "typic": 9, "serial": 9, "written": [9, 14], "alreadi": 9, "exist": [9, 14], "txt": 9, "tupl": [9, 14], "work": [10, 14], "special": 10, "knowledg": 10, "score_func": 10, "user": [10, 11], "score": 10, "expect": 10, "top": 10, "k": 10, "highest": 10, "we": [10, 11], "compar": 10, "b": 10, "cosin": 10, "sql_queri": [11, 14], "databas": 11, "collect": 11, "port": 11, "maxcount_result": 11, "document": 11, "note": 11, "dictionari": [11, 13, 14], "hostnam": 11, "ip": 11, "address": 11, "server": 11, "result": [11, 13], "100": 11, "avoid": 11, "too": [11, 14], "mani": 11, "littl": 11, "correspond": 11, "now": 11, "find": 11, "leav": 11, "futur": 11, "password": 11, "allow_change_data": 11, "localhost": 11, "usernam": 11, "account": 11, "3306": 11, "chang": [11, 14], "accident": 11, "question": 13, "engin": 13, "cse_id": 13, "num_result": 13, "10": 13, "perform": 13, "googl": 13, "bing": 13, "detail": 13, "custom": 13, "formul": 13, "correct": 13, "handl": [13, 14], "uniform": 13, "authent": 13, "chosen": 13, "uniqu": [13, 14], "identifi": 13, "These": 13, "languag": 13, "region": 13, "safe": 13, "statu": [13, 14], "fail": [13, 14], "titl": 13, "link": 13, "snippet": 13, "rais": 13, "valueerror": 13, "unsupport": 13, "chdir": 14, "context": 14, "manag": 14, "contextmanag": 14, "borrow": 14, "create_tempdir": 14, "temporari": 14, "if_change_databas": 14, "select": 14, "requests_get": 14, "param": 14, "send": 14, "log": 14, "except": 14, "sent": 14, "timer": 14, "block": 14, "write_fil": 14, "attempt": 14, "open": 14, "mode": 14, "doe": 14, "overwritten": 14, "permissionerror": 14, "occur": 14, "lack": 14, "necessari": 14, "permiss": 14, "ioerror": 14, "signal": 14, "issu": 14, "invalid": 14, "hardwar": 14, "relat": 14, "o": 14, "catch": 14, "along": 14, "prompttyp": 14, "intenum": 14, "responseformat": 14, "serviceexecstatu": 14, "shrinkpolici": 14, "shrink": 14, "strategi": 14, "long": 14, "truncat": 14, "setup_logg": 14, "path_log": 14, "level": 14, "liter": 14, "trace": 14, "debug": 14, "info": 14, "critic": 14, "setup": 14, "loguru": 14, "logger": 14, "redirect": 14, "stderr": 14, "dictmonitor": 14, "monitorbas": 14, "metric_nam": 14, "increas": 14, "get_metr": 14, "metric_valu": 14, "metric_unit": 14, "quota": 14, "filter_regex": 14, "regular": 14, "express": 14, "metric_name_a": 14, "metric_name_b": 14, "get_quota": 14, "get_unit": 14, "get_valu": 14, "regist": 14, "must": 14, "alert": 14, "trigger": 14, "accumul": 14, "abov": 14, "set_quota": 14, "interfac": 14, "updat": 14, "onc": 14, "monitorfactori": 14, "factori": 14, "singleton": 14, "get_monitor": 14, "classmethod": 14, "impl_typ": 14, "instanc": 14, "quotaexceedederror": 14, "return_false_if_not_exist": 14, "func": 14, "decor": 14, "return_none_if_not_exist": 14, "token": 14, "count_openai_token": 14, "count": 14, "get_openai_max_length": 14, "num_tokens_from_cont": 14, "extract_json_str": 14, "json_str": 14, "extract": 14, "try": 14, "fix": 14, "manual": 14, "to_dialog_str": 14, "item": 14, "convert": 14, "style": 14, "to_openai_dict": 14, "agent": 16, "packag": 16, "rpc_agent": 16, "model_config": 16, "temporary_memori": 16, "openai_model": 16, "post_model": 16, "pipelin": 16, "rpc": 16, "rpc_agent_cli": 16, "rpc_agent_pb2_grpc": 16, "util": 16, "enum": 16, "logging_util": 16, "monitor": 16, "token_util": 16, "tool": 16, "ui": 16, "app": 16, "file_manag": 16, "msghub": 16, "soon": [16, 17], "page": 16}, "objects": {"agentscope.agents": [[1, 0, 0, "-", "agent"]], "agentscope.agents.agent": [[1, 1, 1, "", "AgentBase"]], "agentscope.agents.agent.AgentBase": [[1, 2, 1, "", "clear_audience"], [1, 2, 1, "", "export_config"], [1, 2, 1, "", "load_from_config"], [1, 2, 1, "", "load_memory"], [1, 2, 1, "", "observe"], [1, 2, 1, "", "reply"], [1, 2, 1, "", "reset_audience"], [1, 2, 1, "", "rm_audience"]], "agentscope.configs": [[2, 0, 0, "-", "model_config"]], "agentscope.configs.model_config": [[2, 1, 1, "", "CfgBase"], [2, 1, 1, "", "OpenAICfg"], [2, 1, 1, "", "PostApiCfg"]], "agentscope.configs.model_config.CfgBase": [[2, 2, 1, "", "init"]], "agentscope.configs.model_config.OpenAICfg": [[2, 3, 1, "", "api_key"], [2, 3, 1, "", "client_args"], [2, 3, 1, "", "generate_args"], [2, 3, 1, "", "model_name"], [2, 3, 1, "", "name"], [2, 3, 1, "", "organization"], [2, 3, 1, "", "type"]], "agentscope.configs.model_config.PostApiCfg": [[2, 3, 1, "", "api_url"], [2, 3, 1, "", "headers"], [2, 3, 1, "", "json_args"], [2, 3, 1, "", "max_length"], [2, 3, 1, "", "max_retries"], [2, 3, 1, "", "messages_key"], [2, 3, 1, "", "name"], [2, 3, 1, "", "post_args"], [2, 3, 1, "", "timeout"], [2, 3, 1, "", "type"]], "agentscope.memory": [[3, 0, 0, "-", "memory"], [3, 0, 0, "-", "temporary_memory"]], "agentscope.memory.memory": [[3, 1, 1, "", "MemoryBase"]], "agentscope.memory.memory.MemoryBase": [[3, 2, 1, "", "add"], [3, 2, 1, "", "clear"], [3, 2, 1, "", "delete"], [3, 2, 1, "", "export"], [3, 2, 1, "", "get_memory"], [3, 2, 1, "", "load"], [3, 2, 1, "", "size"], [3, 2, 1, "", "update_config"]], "agentscope.memory.temporary_memory": [[3, 1, 1, "", "TemporaryMemory"]], "agentscope.memory.temporary_memory.TemporaryMemory": [[3, 2, 1, "", "add"], [3, 2, 1, "", "clear"], [3, 2, 1, "", "delete"], [3, 2, 1, "", "export"], [3, 2, 1, "", "get_embeddings"], [3, 2, 1, "", "get_memory"], [3, 2, 1, "", "load"], [3, 2, 1, "", "retrieve_by_embedding"], [3, 2, 1, "", "size"]], "agentscope": [[4, 0, 0, "-", "models"]], "agentscope.models": [[4, 4, 1, "", "clear_model_configs"], [4, 4, 1, "", "load_model_by_name"], [4, 0, 0, "-", "model"], [4, 0, 0, "-", "openai_model"], [4, 0, 0, "-", "post_model"], [4, 4, 1, "", "read_model_configs"]], "agentscope.models.model": [[4, 1, 1, "", "ModelWrapperBase"]], "agentscope.models.openai_model": [[4, 1, 1, "", "OpenAIChatWrapper"], [4, 1, 1, "", "OpenAIDALLEWrapper"], [4, 1, 1, "", "OpenAIEmbeddingWrapper"], [4, 1, 1, "", "OpenAIWrapper"]], "agentscope.models.post_model": [[4, 1, 1, "", "PostApiModelWrapper"]], "agentscope.service.code": [[8, 0, 0, "-", "exec_python"]], "agentscope.service.code.exec_python": [[8, 4, 1, "", "execute_python_code"], [8, 4, 1, "", "sys_python_guard"]], "agentscope.service.file": [[9, 0, 0, "-", "common"], [9, 0, 0, "-", "json"], [9, 0, 0, "-", "text"]], "agentscope.service.file.common": [[9, 4, 1, "", "create_directory"], [9, 4, 1, "", "create_file"], [9, 4, 1, "", "delete_directory"], [9, 4, 1, "", "delete_file"], [9, 4, 1, "", "move_directory"], [9, 4, 1, "", "move_file"]], "agentscope.service.file.json": [[9, 4, 1, "", "read_json_file"], [9, 4, 1, "", "write_json_file"]], "agentscope.service.file.text": [[9, 4, 1, "", "read_text_file"], [9, 4, 1, "", "write_text_file"]], "agentscope.service.retrieval": [[10, 0, 0, "-", "retrieval_from_list"], [10, 0, 0, "-", "similarity"]], "agentscope.service.retrieval.retrieval_from_list": [[10, 4, 1, "", "retrieve_from_list"]], "agentscope.service.retrieval.similarity": [[10, 4, 1, "", "cos_sim"]], "agentscope.service.sql_query": [[11, 0, 0, "-", "mongodb"], [11, 0, 0, "-", "mysql"], [11, 0, 0, "-", "sqlite"]], "agentscope.service.sql_query.mongodb": [[11, 4, 1, "", "query_mongodb"]], "agentscope.service.sql_query.mysql": [[11, 4, 1, "", "query_mysql"]], "agentscope.service.sql_query.sqlite": [[11, 4, 1, "", "query_sqlite"]], "agentscope.service.web_search": [[13, 0, 0, "-", "search"]], "agentscope.service.web_search.search": [[13, 4, 1, "", "web_search"]], "agentscope.utils": [[14, 0, 0, "-", "common"], [14, 0, 0, "-", "enums"], [14, 0, 0, "-", "logging_utils"], [14, 0, 0, "-", "monitor"], [14, 0, 0, "-", "token_utils"], [14, 0, 0, "-", "tools"]], "agentscope.utils.common": [[14, 4, 1, "", "chdir"], [14, 4, 1, "", "create_tempdir"], [14, 4, 1, "", "if_change_database"], [14, 4, 1, "", "requests_get"], [14, 4, 1, "", "timer"], [14, 4, 1, "", "write_file"]], "agentscope.utils.enums": [[14, 1, 1, "", "PromptType"], [14, 1, 1, "", "ResponseFormat"], [14, 1, 1, "", "ServiceExecStatus"], [14, 1, 1, "", "ShrinkPolicy"]], "agentscope.utils.enums.PromptType": [[14, 3, 1, "", "LIST"], [14, 3, 1, "", "STRING"]], "agentscope.utils.enums.ResponseFormat": [[14, 3, 1, "", "JSON"], [14, 3, 1, "", "NONE"]], "agentscope.utils.enums.ServiceExecStatus": [[14, 3, 1, "", "ERROR"], [14, 3, 1, "", "SUCCESS"]], "agentscope.utils.enums.ShrinkPolicy": [[14, 3, 1, "", "SUMMARIZE"], [14, 3, 1, "", "TRUNCATE"]], "agentscope.utils.logging_utils": [[14, 4, 1, "", "setup_logger"]], "agentscope.utils.monitor": [[14, 1, 1, "", "DictMonitor"], [14, 1, 1, "", "MonitorBase"], [14, 1, 1, "", "MonitorFactory"], [14, 5, 1, "", "QuotaExceededError"], [14, 4, 1, "", "return_false_if_not_exists"], [14, 4, 1, "", "return_none_if_not_exists"]], "agentscope.utils.monitor.DictMonitor": [[14, 2, 1, "", "add"], [14, 2, 1, "", "clear"], [14, 2, 1, "", "exists"], [14, 2, 1, "", "get_metric"], [14, 2, 1, "", "get_metrics"], [14, 2, 1, "", "get_quota"], [14, 2, 1, "", "get_unit"], [14, 2, 1, "", "get_value"], [14, 2, 1, "", "register"], [14, 2, 1, "", "remove"], [14, 2, 1, "", "set_quota"]], "agentscope.utils.monitor.MonitorBase": [[14, 2, 1, "", "add"], [14, 2, 1, "", "clear"], [14, 2, 1, "", "exists"], [14, 2, 1, "", "get_metric"], [14, 2, 1, "", "get_metrics"], [14, 2, 1, "", "get_quota"], [14, 2, 1, "", "get_unit"], [14, 2, 1, "", "get_value"], [14, 2, 1, "", "register"], [14, 2, 1, "", "remove"], [14, 2, 1, "", "set_quota"], [14, 2, 1, "", "update"]], "agentscope.utils.monitor.MonitorFactory": [[14, 2, 1, "", "get_monitor"]], "agentscope.utils.token_utils": [[14, 4, 1, "", "count_openai_token"], [14, 4, 1, "", "get_openai_max_length"], [14, 4, 1, "", "num_tokens_from_content"]], "agentscope.utils.tools": [[14, 4, 1, "", "extract_json_str"], [14, 4, 1, "", "to_dialog_str"], [14, 4, 1, "", "to_openai_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"modul": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15], "content": [0, 4], "file_manag": 0, "messag": 0, "msghub": 0, "prompt": 0, "agent": 1, "packag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "rpc_agent": 1, "config": 2, "model_config": 2, "memori": 3, "temporary_memori": 3, "model": 4, "openai_model": 4, "post_model": 4, "pipelin": 5, "function": 5, "rpc": 6, "rpc_agent_cli": 6, "rpc_agent_pb2_grpc": 6, "servic": 7, "code": 8, "exec_python": 8, "file": 9, "common": [9, 14], "json": 9, "text": [9, 12], "retriev": 10, "retrieval_from_list": 10, "similar": 10, "sql": 11, "queri": 11, "mongodb": 11, "mysql": 11, "sqlite": 11, "process": 12, "summar": 12, "web": [13, 15], "search": 13, "util": 14, "enum": 14, "logging_util": 14, "monitor": 14, "token_util": 14, "tool": 14, "ui": 15, "app": 15, "agentscop": [16, 17], "document": 16, "api": 16, "refer": 16, "tutori": [16, 17], "indic": 16, "tabl": 16}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Module contents": [[0, "module-contents"], [4, "module-agentscope.models"]], "file_manager module": [[0, "file-manager-module"]], "message module": [[0, "message-module"]], "msghub module": [[0, "msghub-module"]], "prompt module": [[0, "prompt-module"]], "Agents package": [[1, "agents-package"]], "agent module": [[1, "module-agentscope.agents.agent"]], "rpc_agent module": [[1, "rpc-agent-module"]], "Configs package": [[2, "configs-package"]], "model_config module": [[2, "module-agentscope.configs.model_config"]], "Memory package": [[3, "memory-package"]], "memory module": [[3, "module-agentscope.memory.memory"]], "temporary_memory module": [[3, "module-agentscope.memory.temporary_memory"]], "Models package": [[4, "models-package"]], "model module": [[4, "module-agentscope.models.model"]], "openai_model module": [[4, "module-agentscope.models.openai_model"]], "post_model module": [[4, "module-agentscope.models.post_model"]], "Pipelines package": [[5, "pipelines-package"]], "pipeline module": [[5, "pipeline-module"]], "functional module": [[5, "functional-module"]], "RPC package": [[6, "rpc-package"]], "rpc_agent_client module": [[6, "rpc-agent-client-module"]], "rpc_agent_pb2_grpc module": [[6, "rpc-agent-pb2-grpc-module"]], "Service package": [[7, "service-package"]], "Code package": [[8, "code-package"]], "exec_python module": [[8, "module-agentscope.service.code.exec_python"]], "File package": [[9, "file-package"]], "common module": [[9, "module-agentscope.service.file.common"], [14, "module-agentscope.utils.common"]], "json module": [[9, "module-agentscope.service.file.json"]], "text module": [[9, "module-agentscope.service.file.text"]], "Retrieval package": [[10, "retrieval-package"]], "retrieval_from_list module": [[10, "module-agentscope.service.retrieval.retrieval_from_list"]], "similarity module": [[10, "module-agentscope.service.retrieval.similarity"]], "SQL query package": [[11, "sql-query-package"]], "mongodb module": [[11, "module-agentscope.service.sql_query.mongodb"]], "mysql module": [[11, "module-agentscope.service.sql_query.mysql"]], "sqlite module": [[11, "module-agentscope.service.sql_query.sqlite"]], "Text processing package": [[12, "text-processing-package"]], "summarization module": [[12, "summarization-module"]], "Web search package": [[13, "web-search-package"]], "search module": [[13, "module-agentscope.service.web_search.search"]], "Utils package": [[14, "utils-package"]], "enums module": [[14, "module-agentscope.utils.enums"]], "logging_utils module": [[14, "module-agentscope.utils.logging_utils"]], "monitor module": [[14, "module-agentscope.utils.monitor"]], "token_utils module": [[14, "module-agentscope.utils.token_utils"]], "tools module": [[14, "module-agentscope.utils.tools"]], "Web UI package": [[15, "web-ui-package"]], "app module": [[15, "app-module"]], "AgentScope Documentation": [[16, "agentscope-documentation"]], "AgentScope API Reference": [[16, null]], "AgentScope Tutorial": [[16, "agentscope-tutorial"], [17, "agentscope-tutorial"]], "Indices and tables": [[16, "indices-and-tables"]]}, "indexentries": {"agentbase (class in agentscope.agents.agent)": [[1, "agentscope.agents.agent.AgentBase"]], "agentscope.agents.agent": [[1, "module-agentscope.agents.agent"]], "clear_audience() (agentscope.agents.agent.agentbase method)": [[1, "agentscope.agents.agent.AgentBase.clear_audience"]], "export_config() (agentscope.agents.agent.agentbase method)": [[1, "agentscope.agents.agent.AgentBase.export_config"]], "load_from_config() (agentscope.agents.agent.agentbase method)": [[1, "agentscope.agents.agent.AgentBase.load_from_config"]], "load_memory() (agentscope.agents.agent.agentbase method)": [[1, "agentscope.agents.agent.AgentBase.load_memory"]], "module": [[1, "module-agentscope.agents.agent"], [2, "module-agentscope.configs.model_config"], [3, "module-agentscope.memory.memory"], [3, "module-agentscope.memory.temporary_memory"], [4, "module-agentscope.models"], [4, "module-agentscope.models.model"], [4, "module-agentscope.models.openai_model"], [4, "module-agentscope.models.post_model"], [8, "module-agentscope.service.code.exec_python"], [9, "module-agentscope.service.file.common"], [9, "module-agentscope.service.file.json"], [9, "module-agentscope.service.file.text"], [10, "module-agentscope.service.retrieval.retrieval_from_list"], [10, "module-agentscope.service.retrieval.similarity"], [11, "module-agentscope.service.sql_query.mongodb"], [11, "module-agentscope.service.sql_query.mysql"], [11, "module-agentscope.service.sql_query.sqlite"], [13, "module-agentscope.service.web_search.search"], [14, "module-agentscope.utils.common"], [14, "module-agentscope.utils.enums"], [14, "module-agentscope.utils.logging_utils"], [14, "module-agentscope.utils.monitor"], [14, "module-agentscope.utils.token_utils"], [14, "module-agentscope.utils.tools"]], "observe() (agentscope.agents.agent.agentbase method)": [[1, "agentscope.agents.agent.AgentBase.observe"]], "reply() (agentscope.agents.agent.agentbase method)": [[1, "agentscope.agents.agent.AgentBase.reply"]], "reset_audience() (agentscope.agents.agent.agentbase method)": [[1, "agentscope.agents.agent.AgentBase.reset_audience"]], "rm_audience() (agentscope.agents.agent.agentbase method)": [[1, "agentscope.agents.agent.AgentBase.rm_audience"]], "cfgbase (class in agentscope.configs.model_config)": [[2, "agentscope.configs.model_config.CfgBase"]], "openaicfg (class in agentscope.configs.model_config)": [[2, "agentscope.configs.model_config.OpenAICfg"]], "postapicfg (class in agentscope.configs.model_config)": [[2, "agentscope.configs.model_config.PostApiCfg"]], "agentscope.configs.model_config": [[2, "module-agentscope.configs.model_config"]], "api_key (agentscope.configs.model_config.openaicfg attribute)": [[2, "agentscope.configs.model_config.OpenAICfg.api_key"]], "api_url (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.api_url"]], "client_args (agentscope.configs.model_config.openaicfg attribute)": [[2, "agentscope.configs.model_config.OpenAICfg.client_args"]], "generate_args (agentscope.configs.model_config.openaicfg attribute)": [[2, "agentscope.configs.model_config.OpenAICfg.generate_args"]], "headers (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.headers"]], "init() (agentscope.configs.model_config.cfgbase method)": [[2, "agentscope.configs.model_config.CfgBase.init"]], "json_args (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.json_args"]], "max_length (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.max_length"]], "max_retries (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.max_retries"]], "messages_key (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.messages_key"]], "model_name (agentscope.configs.model_config.openaicfg attribute)": [[2, "agentscope.configs.model_config.OpenAICfg.model_name"]], "name (agentscope.configs.model_config.openaicfg attribute)": [[2, "agentscope.configs.model_config.OpenAICfg.name"]], "name (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.name"]], "organization (agentscope.configs.model_config.openaicfg attribute)": [[2, "agentscope.configs.model_config.OpenAICfg.organization"]], "post_args (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.post_args"]], "timeout (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.timeout"]], "type (agentscope.configs.model_config.openaicfg attribute)": [[2, "agentscope.configs.model_config.OpenAICfg.type"]], "type (agentscope.configs.model_config.postapicfg attribute)": [[2, "agentscope.configs.model_config.PostApiCfg.type"]], "memorybase (class in agentscope.memory.memory)": [[3, "agentscope.memory.memory.MemoryBase"]], "temporarymemory (class in agentscope.memory.temporary_memory)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory"]], "add() (agentscope.memory.memory.memorybase method)": [[3, "agentscope.memory.memory.MemoryBase.add"]], "add() (agentscope.memory.temporary_memory.temporarymemory method)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory.add"]], "agentscope.memory.memory": [[3, "module-agentscope.memory.memory"]], "agentscope.memory.temporary_memory": [[3, "module-agentscope.memory.temporary_memory"]], "clear() (agentscope.memory.memory.memorybase method)": [[3, "agentscope.memory.memory.MemoryBase.clear"]], "clear() (agentscope.memory.temporary_memory.temporarymemory method)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory.clear"]], "delete() (agentscope.memory.memory.memorybase method)": [[3, "agentscope.memory.memory.MemoryBase.delete"]], "delete() (agentscope.memory.temporary_memory.temporarymemory method)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory.delete"]], "export() (agentscope.memory.memory.memorybase method)": [[3, "agentscope.memory.memory.MemoryBase.export"]], "export() (agentscope.memory.temporary_memory.temporarymemory method)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory.export"]], "get_embeddings() (agentscope.memory.temporary_memory.temporarymemory method)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory.get_embeddings"]], "get_memory() (agentscope.memory.memory.memorybase method)": [[3, "agentscope.memory.memory.MemoryBase.get_memory"]], "get_memory() (agentscope.memory.temporary_memory.temporarymemory method)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory.get_memory"]], "load() (agentscope.memory.memory.memorybase method)": [[3, "agentscope.memory.memory.MemoryBase.load"]], "load() (agentscope.memory.temporary_memory.temporarymemory method)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory.load"]], "retrieve_by_embedding() (agentscope.memory.temporary_memory.temporarymemory method)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory.retrieve_by_embedding"]], "size() (agentscope.memory.memory.memorybase method)": [[3, "agentscope.memory.memory.MemoryBase.size"]], "size() (agentscope.memory.temporary_memory.temporarymemory method)": [[3, "agentscope.memory.temporary_memory.TemporaryMemory.size"]], "update_config() (agentscope.memory.memory.memorybase method)": [[3, "agentscope.memory.memory.MemoryBase.update_config"]], "modelwrapperbase (class in agentscope.models.model)": [[4, "agentscope.models.model.ModelWrapperBase"]], "openaichatwrapper (class in agentscope.models.openai_model)": [[4, "agentscope.models.openai_model.OpenAIChatWrapper"]], "openaidallewrapper (class in agentscope.models.openai_model)": [[4, "agentscope.models.openai_model.OpenAIDALLEWrapper"]], "openaiembeddingwrapper (class in agentscope.models.openai_model)": [[4, "agentscope.models.openai_model.OpenAIEmbeddingWrapper"]], "openaiwrapper (class in agentscope.models.openai_model)": [[4, "agentscope.models.openai_model.OpenAIWrapper"]], "postapimodelwrapper (class in agentscope.models.post_model)": [[4, "agentscope.models.post_model.PostApiModelWrapper"]], "agentscope.models": [[4, "module-agentscope.models"]], "agentscope.models.model": [[4, "module-agentscope.models.model"]], "agentscope.models.openai_model": [[4, "module-agentscope.models.openai_model"]], "agentscope.models.post_model": [[4, "module-agentscope.models.post_model"]], "clear_model_configs() (in module agentscope.models)": [[4, "agentscope.models.clear_model_configs"]], "load_model_by_name() (in module agentscope.models)": [[4, "agentscope.models.load_model_by_name"]], "read_model_configs() (in module agentscope.models)": [[4, "agentscope.models.read_model_configs"]], "agentscope.service.code.exec_python": [[8, "module-agentscope.service.code.exec_python"]], "execute_python_code() (in module agentscope.service.code.exec_python)": [[8, "agentscope.service.code.exec_python.execute_python_code"]], "sys_python_guard() (in module agentscope.service.code.exec_python)": [[8, "agentscope.service.code.exec_python.sys_python_guard"]], "agentscope.service.file.common": [[9, "module-agentscope.service.file.common"]], "agentscope.service.file.json": [[9, "module-agentscope.service.file.json"]], "agentscope.service.file.text": [[9, "module-agentscope.service.file.text"]], "create_directory() (in module agentscope.service.file.common)": [[9, "agentscope.service.file.common.create_directory"]], "create_file() (in module agentscope.service.file.common)": [[9, "agentscope.service.file.common.create_file"]], "delete_directory() (in module agentscope.service.file.common)": [[9, "agentscope.service.file.common.delete_directory"]], "delete_file() (in module agentscope.service.file.common)": [[9, "agentscope.service.file.common.delete_file"]], "move_directory() (in module agentscope.service.file.common)": [[9, "agentscope.service.file.common.move_directory"]], "move_file() (in module agentscope.service.file.common)": [[9, "agentscope.service.file.common.move_file"]], "read_json_file() (in module agentscope.service.file.json)": [[9, "agentscope.service.file.json.read_json_file"]], "read_text_file() (in module agentscope.service.file.text)": [[9, "agentscope.service.file.text.read_text_file"]], "write_json_file() (in module agentscope.service.file.json)": [[9, "agentscope.service.file.json.write_json_file"]], "write_text_file() (in module agentscope.service.file.text)": [[9, "agentscope.service.file.text.write_text_file"]], "agentscope.service.retrieval.retrieval_from_list": [[10, "module-agentscope.service.retrieval.retrieval_from_list"]], "agentscope.service.retrieval.similarity": [[10, "module-agentscope.service.retrieval.similarity"]], "cos_sim() (in module agentscope.service.retrieval.similarity)": [[10, "agentscope.service.retrieval.similarity.cos_sim"]], "retrieve_from_list() (in module agentscope.service.retrieval.retrieval_from_list)": [[10, "agentscope.service.retrieval.retrieval_from_list.retrieve_from_list"]], "agentscope.service.sql_query.mongodb": [[11, "module-agentscope.service.sql_query.mongodb"]], "agentscope.service.sql_query.mysql": [[11, "module-agentscope.service.sql_query.mysql"]], "agentscope.service.sql_query.sqlite": [[11, "module-agentscope.service.sql_query.sqlite"]], "query_mongodb() (in module agentscope.service.sql_query.mongodb)": [[11, "agentscope.service.sql_query.mongodb.query_mongodb"]], "query_mysql() (in module agentscope.service.sql_query.mysql)": [[11, "agentscope.service.sql_query.mysql.query_mysql"]], "query_sqlite() (in module agentscope.service.sql_query.sqlite)": [[11, "agentscope.service.sql_query.sqlite.query_sqlite"]], "agentscope.service.web_search.search": [[13, "module-agentscope.service.web_search.search"]], "web_search() (in module agentscope.service.web_search.search)": [[13, "agentscope.service.web_search.search.web_search"]], "dictmonitor (class in agentscope.utils.monitor)": [[14, "agentscope.utils.monitor.DictMonitor"]], "error (agentscope.utils.enums.serviceexecstatus attribute)": [[14, "agentscope.utils.enums.ServiceExecStatus.ERROR"]], "json (agentscope.utils.enums.responseformat attribute)": [[14, "agentscope.utils.enums.ResponseFormat.JSON"]], "list (agentscope.utils.enums.prompttype attribute)": [[14, "agentscope.utils.enums.PromptType.LIST"]], "monitorbase (class in agentscope.utils.monitor)": [[14, "agentscope.utils.monitor.MonitorBase"]], "monitorfactory (class in agentscope.utils.monitor)": [[14, "agentscope.utils.monitor.MonitorFactory"]], "none (agentscope.utils.enums.responseformat attribute)": [[14, "agentscope.utils.enums.ResponseFormat.NONE"]], "prompttype (class in agentscope.utils.enums)": [[14, "agentscope.utils.enums.PromptType"]], "quotaexceedederror": [[14, "agentscope.utils.monitor.QuotaExceededError"]], "responseformat (class in agentscope.utils.enums)": [[14, "agentscope.utils.enums.ResponseFormat"]], "string (agentscope.utils.enums.prompttype attribute)": [[14, "agentscope.utils.enums.PromptType.STRING"]], "success (agentscope.utils.enums.serviceexecstatus attribute)": [[14, "agentscope.utils.enums.ServiceExecStatus.SUCCESS"]], "summarize (agentscope.utils.enums.shrinkpolicy attribute)": [[14, "agentscope.utils.enums.ShrinkPolicy.SUMMARIZE"]], "serviceexecstatus (class in agentscope.utils.enums)": [[14, "agentscope.utils.enums.ServiceExecStatus"]], "shrinkpolicy (class in agentscope.utils.enums)": [[14, "agentscope.utils.enums.ShrinkPolicy"]], "truncate (agentscope.utils.enums.shrinkpolicy attribute)": [[14, "agentscope.utils.enums.ShrinkPolicy.TRUNCATE"]], "add() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.add"]], "add() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.add"]], "agentscope.utils.common": [[14, "module-agentscope.utils.common"]], "agentscope.utils.enums": [[14, "module-agentscope.utils.enums"]], "agentscope.utils.logging_utils": [[14, "module-agentscope.utils.logging_utils"]], "agentscope.utils.monitor": [[14, "module-agentscope.utils.monitor"]], "agentscope.utils.token_utils": [[14, "module-agentscope.utils.token_utils"]], "agentscope.utils.tools": [[14, "module-agentscope.utils.tools"]], "chdir() (in module agentscope.utils.common)": [[14, "agentscope.utils.common.chdir"]], "clear() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.clear"]], "clear() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.clear"]], "count_openai_token() (in module agentscope.utils.token_utils)": [[14, "agentscope.utils.token_utils.count_openai_token"]], "create_tempdir() (in module agentscope.utils.common)": [[14, "agentscope.utils.common.create_tempdir"]], "exists() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.exists"]], "exists() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.exists"]], "extract_json_str() (in module agentscope.utils.tools)": [[14, "agentscope.utils.tools.extract_json_str"]], "get_metric() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.get_metric"]], "get_metric() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.get_metric"]], "get_metrics() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.get_metrics"]], "get_metrics() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.get_metrics"]], "get_monitor() (agentscope.utils.monitor.monitorfactory class method)": [[14, "agentscope.utils.monitor.MonitorFactory.get_monitor"]], "get_openai_max_length() (in module agentscope.utils.token_utils)": [[14, "agentscope.utils.token_utils.get_openai_max_length"]], "get_quota() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.get_quota"]], "get_quota() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.get_quota"]], "get_unit() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.get_unit"]], "get_unit() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.get_unit"]], "get_value() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.get_value"]], "get_value() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.get_value"]], "if_change_database() (in module agentscope.utils.common)": [[14, "agentscope.utils.common.if_change_database"]], "num_tokens_from_content() (in module agentscope.utils.token_utils)": [[14, "agentscope.utils.token_utils.num_tokens_from_content"]], "register() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.register"]], "register() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.register"]], "remove() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.remove"]], "remove() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.remove"]], "requests_get() (in module agentscope.utils.common)": [[14, "agentscope.utils.common.requests_get"]], "return_false_if_not_exists() (in module agentscope.utils.monitor)": [[14, "agentscope.utils.monitor.return_false_if_not_exists"]], "return_none_if_not_exists() (in module agentscope.utils.monitor)": [[14, "agentscope.utils.monitor.return_none_if_not_exists"]], "set_quota() (agentscope.utils.monitor.dictmonitor method)": [[14, "agentscope.utils.monitor.DictMonitor.set_quota"]], "set_quota() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.set_quota"]], "setup_logger() (in module agentscope.utils.logging_utils)": [[14, "agentscope.utils.logging_utils.setup_logger"]], "timer() (in module agentscope.utils.common)": [[14, "agentscope.utils.common.timer"]], "to_dialog_str() (in module agentscope.utils.tools)": [[14, "agentscope.utils.tools.to_dialog_str"]], "to_openai_dict() (in module agentscope.utils.tools)": [[14, "agentscope.utils.tools.to_openai_dict"]], "update() (agentscope.utils.monitor.monitorbase method)": [[14, "agentscope.utils.monitor.MonitorBase.update"]], "write_file() (in module agentscope.utils.common)": [[14, "agentscope.utils.common.write_file"]]}})