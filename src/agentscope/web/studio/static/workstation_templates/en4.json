{
  "drawflow": {
    "Home": {
      "data": {
        "4": {
          "id": 4,
          "name": "MsgHub",
          "data": {
            "elements": [
              "5"
            ],
            "args": {
              "announcement": {
                "name": "Host",
                "content": "This is a chat room and you can speak freely and briefly."
              }
            }
          },
          "class": "GROUP",
          "html": "\n          <div>\n            <div class=\"title-box\"><i class=\"fas fa-project-diagram\"></i>MsgHub\n                <span class=\"toggle-arrow\">▲</span></div>\n            <div class=\"box\">\n                <div class=\"readme\">MsgHub is used to share messages among a group of agents</div>\n                <p>Announcement Name</p>\n                <input type=\"text\" df-args-announcement-name placeholder=\"Host\" style=\"width: 450px\"><br>\n                <p>Announcement Content</p>\n                <input type=\"text\" df-args-announcement-content placeholder=\"Welcome to the group chat!\" style=\"width: 450px\"><br>\n                <div class=\"placeholder\"></div>\n            </div>\n          </div>\n          ",
          "typenode": false,
          "inputs": {
            "input_1": {
              "connections": [
                {
                  "node": "3",
                  "input": "output_1"
                }
              ]
            }
          },
          "outputs": {
            "output_1": {
              "connections": []
            }
          },
          "pos_x": 705,
          "pos_y": 8
        },
        "5": {
          "id": 5,
          "name": "WhileLoopPipeline",
          "data": {
            "elements": [
              "6"
            ],
            "args": {
              "condition_func": "lambda *args: True"
            }
          },
          "class": "GROUP",
          "html": "\n          <div>\n            <div class=\"title-box\"><i class=\"fas fa-project-diagram\"></i>WhileLoopPipeline\n                <span class=\"toggle-arrow\">▲</span></div>\n            <div class=\"box\">\n                <div class=\"readme\">A template pipeline for implementing control flow like while-loop</div>\n                <p>Condition Function</p>\n                <input type=\"text\" df-args-condition_func style=\"width: 450px\"><br>\n                <div class=\"placeholder\"></div>\n            </div>\n          </div>\n          ",
          "typenode": false,
          "inputs": {
            "input_1": {
              "connections": []
            }
          },
          "outputs": {
            "output_1": {
              "connections": []
            }
          },
          "pos_x": 827,
          "pos_y": 141.5
        },
        "6": {
          "id": 6,
          "name": "SequentialPipeline",
          "data": {
            "elements": [
              "8",
              "9",
              "7",
              "10"
            ]
          },
          "class": "GROUP",
          "html": "\n          <div>\n            <div class=\"title-box\"><i class=\"fas fa-project-diagram\"></i>SequentialPipeline\n                <span class=\"toggle-arrow\">▲</span></div>\n            <div class=\"box\">\n                <div class=\"readme\">A template pipeline for implementing sequential logic (<b>from top to bottom</b>)</div>\n                <div class=\"placeholder\"></div>\n            </div>\n          </div>\n          ",
          "typenode": false,
          "inputs": {
            "input_1": {
              "connections": []
            }
          },
          "outputs": {
            "output_1": {
              "connections": []
            }
          },
          "pos_x": 893,
          "pos_y": 254.75
        },
        "7": {
          "id": 7,
          "name": "DialogAgent",
          "data": {
            "args": {
              "name": "Lingfeng",
              "sys_prompt": "You are Lingfeng, a noble in the imperial court, known for your wisdom and strategic acumen. You often engage in complex political intrigues and have recently suspected the Queen’s adviser of treachery. Your speaking style is reminiscent of classical literature. Respond in a concise statement, no more than 30 words.",
              "model_config_name": "qwen"
            }
          },
          "class": "DialogAgent",
          "html": "\n          <div>\n            <div class=\"title-box\"><i class=\"fas fa-robot\"></i>DialogAgent\n            <button class=\"button copy-button\">Copy</button>\n                      <span class=\"toggle-arrow\">▲</span></div>\n            <div class=\"box\">\n              <div class=\"readme\">\n              <div>Node ID: <span class=\"node-id\">7</span></div>\n              Agent for dialog\n                </div>\n              <p>Name</p>\n              <input type=\"text\" df-args-name placeholder=\"Assistant\"><br>\n              <p>System prompt</p>\n              <input type=\"text\" df-args-sys_prompt placeholder=\"You're an assistant.\"><br>\n              <p>Model config name</p>\n              <input type=\"text\" df-args-model_config_name placeholder=\"gpt-3.5-turbo\">\n            </div>\n          </div>\n          ",
          "typenode": false,
          "inputs": {
            "input_1": {
              "connections": []
            }
          },
          "outputs": {
            "output_1": {
              "connections": []
            }
          },
          "pos_x": 934,
          "pos_y": 343
        },
        "8": {
          "id": 8,
          "name": "DialogAgent",
          "data": {
            "args": {
              "name": "Boyu",
              "sys_prompt": "You are Boyu, a friend of Lingfeng and an enthusiast of court dramas. Your speech is modern but with a flair for the dramatic, matching your love for emotive storytelling. You've been closely following Lingfeng’s political maneuvers in the imperial court through secret correspondence. Respond in a concise statement, no more than 30 words.",
              "model_config_name": "qwen"
            }
          },
          "class": "DialogAgent",
          "html": "\n          <div>\n            <div class=\"title-box\"><i class=\"fas fa-robot\"></i>DialogAgent\n            <button class=\"button copy-button\">Copy</button>\n                      <span class=\"toggle-arrow\">▲</span></div>\n            <div class=\"box\">\n              <div class=\"readme\">\n              <div>Node ID: <span class=\"node-id\">8</span></div>\n              Agent for dialog\n                </div>\n              <p>Name</p>\n              <input type=\"text\" df-args-name placeholder=\"Assistant\"><br>\n              <p>System prompt</p>\n              <input type=\"text\" df-args-sys_prompt placeholder=\"You're an assistant.\"><br>\n              <p>Model config name</p>\n              <input type=\"text\" df-args-model_config_name placeholder=\"gpt-3.5-turbo\">\n            </div>\n          </div>\n          ",
          "typenode": false,
          "inputs": {
            "input_1": {
              "connections": []
            }
          },
          "outputs": {
            "output_1": {
              "connections": []
            }
          },
          "pos_x": 970,
          "pos_y": 365
        },
        "9": {
          "id": 9,
          "name": "DialogAgent",
          "data": {
            "args": {
              "name": "Haotian",
              "sys_prompt": "You are Haotian, Lingfeng’s cousin who prefers the open fields to the confines of court life. As a celebrated athlete, your influence has protected Lingfeng in times of political strife. You promote physical training as a way to prepare for life's battles, often using sports metaphors in conversation. Respond in a concise statement, no more than 30 words.",
              "model_config_name": "qwen"
            }
          },
          "class": "DialogAgent",
          "html": "\n          <div>\n            <div class=\"title-box\"><i class=\"fas fa-robot\"></i>DialogAgent\n            <button class=\"button copy-button\">Copy</button>\n                      <span class=\"toggle-arrow\">▲</span></div>\n            <div class=\"box\">\n              <div class=\"readme\">\n              <div>Node ID: <span class=\"node-id\">9</span></div>\n              Agent for dialog\n                </div>\n              <p>Name</p>\n              <input type=\"text\" df-args-name placeholder=\"Assistant\"><br>\n              <p>System prompt</p>\n              <input type=\"text\" df-args-sys_prompt placeholder=\"You're an assistant.\"><br>\n              <p>Model config name</p>\n              <input type=\"text\" df-args-model_config_name placeholder=\"gpt-3.5-turbo\">\n            </div>\n          </div>\n          ",
          "typenode": false,
          "inputs": {
            "input_1": {
              "connections": []
            }
          },
          "outputs": {
            "output_1": {
              "connections": []
            }
          },
          "pos_x": 1009,
          "pos_y": 409
        },
        "10": {
          "id": 10,
          "name": "UserAgent",
          "data": {
            "args": {
              "name": "King"
            }
          },
          "class": "UserAgent",
          "html": "\n          <div>\n            <div class=\"title-box\"><i class=\"fas fa-robot\"></i>UserAgent\n            <button class=\"button copy-button\">Copy</button>\n            <span class=\"toggle-arrow\">▲</div>\n            <div class=\"box\">\n            <div class=\"readme\">\n            <div>Node ID: <span class=\"node-id\">10</span></div>\n            A proxy agent for user</div>\n              <p>Name</p>\n              <input type=\"text\" df-args-name placeholder=\"User\"><br>\n            </div>\n          </div>\n          ",
          "typenode": false,
          "inputs": {
            "input_1": {
              "connections": []
            }
          },
          "outputs": {
            "output_1": {
              "connections": []
            }
          },
          "pos_x": 1043,
          "pos_y": 454
        },
        "2": {
          "id": 2,
          "name": "dashscope_chat",
          "data": {
            "args": {
              "config_name": "qwen",
              "model_name": "qwen-max",
              "api_key": "",
              "temperature": 0.1,
              "seed": 1,
              "model_type": "dashscope_chat",
              "messages_key": "input"
            }
          },
          "class": "dashscope_chat",
          "html": "\n        <div>\n          <div class=\"title-box\"><i class=\"fas fa-brain\"></i> DashScope Chat\n          <span class=\"toggle-arrow\">▲</span> </div>\n          <div class=\"box\">\n            <div class=\"readme\">Dashscope Chat Configurations (Your API key will NOT be stored and exposed to the website\n                maintainer)</div><br>\n            <label> Config Name </label>\n            <input type=\"text\" df-args-config_name placeholder=\"qwen\"><br>\n            <label> Model Name</label>\n            <input type=\"text\" list=\"dashscope_chat-model-names\" df-args-model_name><br>\n            <datalist id=\"dashscope_chat-model-names\">\n              <option value=\"qwen-turbo\">\n              <option value=\"qwen-plus\">\n              <option value=\"qwen-max\">\n              <option value=\"qwen-max-1201\">\n            </datalist>\n            <label> API key</label>\n            <input type=\"text\" df-args-api_key><br>\n            <label> Temperature </label>\n            <input type=\"number\" df-args-temperature placeholder=0 min=\"0\" max=\"2\" step=\"0.1\"><br>\n            <label> Seed </label>\n            <input type=\"number\" df-args-seed placeholder=0 min=\"0\">\n          </div>\n        </div>\n        ",
          "typenode": false,
          "inputs": {},
          "outputs": {},
          "pos_x": 358,
          "pos_y": 7
        },
        "3": {
          "id": 3,
          "name": "Message",
          "data": {
            "args": {
              "name": "User",
              "content": "Hello every one",
              "url": ""
            }
          },
          "class": "Message",
          "html": "\n          <div>\n            <div class=\"title-box\"><i class=\"fas fa-comment-dots\"></i>Message\n            <span class=\"toggle-arrow\">▲</div>\n            <div class=\"box\">\n              <p>Name</p>\n              <input type=\"text\" df-args-name placeholder=\"Host\"><br>\n              <p>Content</p>\n              <input type=\"text\" df-args-content placeholder=\"Hello\"><br>\n              <p>URL (Optional)</p>\n              <input type=\"text\" df-args-url placeholder=\"\"><br>\n            </div>\n          </div>\n          ",
          "typenode": false,
          "inputs": {
            "input_1": {
              "connections": []
            }
          },
          "outputs": {
            "output_1": {
              "connections": [
                {
                  "node": "4",
                  "output": "input_1"
                }
              ]
            }
          },
          "pos_x": 350,
          "pos_y": 505
        },
        "1": {
          "id": 1,
          "name": "readme",
          "data": {},
          "class": "welcome",
          "html": "\n        <div class=\"title-box\"><i class=\"fa fa-book\"></i> README <span class=\"toggle-arrow\">▲</span> </div>\n        <div class=\"box-highlight\">\n      📖 This example demonstrates a multi-agent group chat facilitated by AgentScope. <br><br> <div class=\"modules-info\"><h4>Modules Used:</h4><ul><li><span class=\"highlight-module\" onclick=\"editor.selectNode(2);\">DashScope Chat:</span><br> - Each application must contain a model configured.</li><li><span class=\"highlight-module\" onclick=\"editor.selectNode(4);\">MsgHub:</span><br> - MsgHub is where agents share their messages like a group chat.</li><li><span class=\"highlight-module\" onclick=\"editor.selectNode(3);\">Message:</span><br> - Message is flow passing among agents.</li><li><span class=\"highlight-module\" onclick=\"editor.selectNode(5);\">WhileLoopPipeline:</span><br> - Designed to perform repetitive operations.</li><li><span class=\"highlight-module\" onclick=\"editor.selectNode(6);\">SequentialPipeline:</span><br> - Make the message passes in a predefined, sequential order among agents.</li><li><span class=\"highlight-module\" onclick=\"editor.selectNode(10);\">UserAgent:</span><br> - Represents a user in a application.</li><li><span class=\"highlight-module\" onclick=\"editor.selectNode(9);\">DialogAgent:</span><br> - Agent for dialog in an application.</li></ur></div>For more details, please see <a href=\"https://github.com/modelscope/agentscope/tree/main/examples/conversation_with_mentions\" target=\"_blank\">here</a>.  </div>\n      </div>\n      ",
          "typenode": false,
          "inputs": {},
          "outputs": {},
          "pos_x": 68,
          "pos_y": 67
        }
      }
    }
  }
}